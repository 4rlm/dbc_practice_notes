,,,,,,,Topic,Code,,,,,,Creating a basic JavaScript,"var today = new Date();var hourNow = today.getHours();var greeting;if (hourNow > 18) {	greeting = 'Good evening!';} else if (hourNow > 12) {	greeting = 'Good afternoon!';} else if (hourNow > 0) {	greeting = 'Good morning!';} else {	greeting = 'Welcome!';}document.write('<h3>' + greeting + '</h3>');",,,,,,Linking to a JS File from HTML,"<!DOCTYPE html><html><head>	<title>Constructive &amp; Co.</title>	<link rel="stylesheet" href="css/c01.css" /></head><body>	<h1>Constructive &amp; Co.</h1>	<script src="js/add-content.js"></script>	<p>For all orders and inquiries please call <em>555-3344</em></p></body></html>""!DOCTYPE html><html><head>	<title>Constructive &amp; Co.</title>	<link rel="stylesheet" href="css/c01.css" /></head><body>	<h1>Constructive &amp; Co.</h1>	<script src="js/add-content.js"></script>	<""DOCTYPE html><html><head>	<title>Constructive &amp; Co.</title>	<link rel="stylesheet" href="css/c01.css" /></head><body>""OCTYPE html><html><head>	<title>Constructive ",,,,,,Placing Script in the Page,"<!DOCTYPE html><html><head>	<title>Constructive &amp; Co.</title>	<link rel="stylesheet" href="css/c01.css" /></head><body>	<h1>Constructive &amp; Co.</h1>	<script>document.write('<h3>Welcome!</h3>');	</script>	<p>For all orders and inquiries please call <em>555-3344</em></p></body></html>""!DOCTYPE html><html><head>	<title>Constructive &amp; Co.</title>	<link rel="stylesheet" href="css/c01.css" /></head><body>	<h1>Constructive &amp; Co.</h1>	<script>document.write('<h3>Welcome!</h3>');	</script>	<""DOCTYPE html><html><head>	<title>Constructive &amp; Co.</title>	<link rel="stylesheet" href="css/c01.css" /></head><body>	<h1>Construc""OCTYPE html><html><head>	<title>Constructive &amp; Co.</tit",,,,,,Summary,"C: How do I write a script for a web page?>It's best to keep JavaScript code in its own JavaScript file.  JavaScript files are text files (like HTML pages and CSS style sheets), but they have the .js extension.>The HTML <script> element is used in HTML pages to tell the browser to load the JavaScript file (rather like the <link> element can be used to load CSS files).>If you view the source code of the page in the browser the JavaScript will not have changed the HTML because the script works with the model of the web page that the browser has created.",,,,,,Statements / code block,,,,,,,Comments,//   /*  */,,,,,,Data Types,"Numeric Data Type, String Data Type, Boolean Data Type",,,,,,Using Variable to Store a Number,"<!DOCTYPE html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"></script></body></html>   var price;var quantity;var total;price = 5;quantity = 14;total = price * quantity;var el = document.getElementById('cost');el.textContent = '$' + total;""!DOCTYPE html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"></script></body></html>   var price;var quantity;var total;price = 5;quantity = 14;total = price * quantity;var el = document.getElementById('cost');el""DOCTYPE html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"></script></body></html>   var price;var quantity;var total;price = 5;quantity = 14;total = price * quantity;var el = document.""OCTYPE html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"></script></body></html>   var price;var quantity;var total;price = 5;quantity = 14;total = price * quan""CTYPE html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"></script></body></html>   var price;var quantity;var total;price = 5;quantity = ""TYPE html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"></script></body></html>   var price;var quantity;var total;""YPE html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"></script></body></html>   var price;var""PE html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"></script></body></h""E html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script src="js/varEx.js"><"" html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">	</div>	<script ""html><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview.jpg" alt="Sign">""tml><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src="images/preview""ml><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</div>		<img src""l><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: $5 per title</""><html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="cost">Cost: ""<html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id=""<html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div id="content"""html lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h1>	<div i""tml lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elderflower</h""ml lang="en"><head>	<title>VarEx</title></head><body>	<h1>Elder""l lang="en"><head>	<title>VarEx</title></head><body>	<"" lang="en"><head>	<title>VarEx</title></head><b""lang="en"><head>	<title>VarEx</title></he""ang="en"><head>	<title>VarEx</title>""ng="en"><head>	<title>VarEx</ti""g="en"><head>	<title>VarEx<""="en"><head>	<title>VarE"""en"><head>	<title>Var""en"><head>	<title>Var""n"><head>	<title>V"""><head>	<title>""><head>	<title>",,,,,,Using Variable to Store a String,"<!DOCTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="title">Howdy		<span id="name">friend</span>!</div>	<div id="note">Take a look around...	</div>	<script src="js/varEx.js"></script></body></html>  var username;var message;username = 'Molly';message = 'See our upcoming range';var elName = document.getElementById('name');elName.textContent = username;var elNote = document.getElementById('note');elNote.textContent = message;""!DOCTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="title">Howdy		<span id="name">friend</span>!</div>	<div id="note">Take a look around...	</div>	<script src="js/varEx.js"></script></body></html>  var username;var message;username = 'Molly';message = 'See our upcoming range';var elName = document.getElementById('name');elName.""DOCTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="title">Howdy		<span id="name">friend</span>!</div>	<div id="note">Take a look around...	</div>	<script src="js/varEx.js"></script></body></html>  var username;var message;username = '""OCTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="title">Howdy		<span id="name">friend</span>!</div>	<div id="note">Take a look around...	</d""CTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id",,,,,,Using Quotes inside a String,"<!DOCTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="title">Special Offers</div>		<div id="note">Sign-up to receive personalized offers!</div>	</div>	<script src="js/varEx.js"></script></body></html>  var title;var message;title = "Molly's Special Offer";message = '<a href=\"sale.html\">25% off!</a>';var elTitle = document.getElementById('title');elTitle.innerHTML = title;var elNote = document.getElementById('note');elNote.innerHTML = message;	""!DOCTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="title">Special Offers</div>		<div id="note">Sign-up to receive personalized offers!</div>	</div>	<script src="js/varEx.js"></script></body></html>  var title;var message;title = "Molly's Special Offer";message = '<a href=\"sale.html\">25% off!</a>';var elTitle = document.getElementById('title');el""DOCTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="title">Special Offers</div>		<div id="note">Sign-up to receive personalized offers!</div>	</div>	<script src="js/varEx.js"></script></body></html>  var title;var message;title = "Molly's Special Offer";m""OCTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="title">Special Offers</div>		<div id="note">Sign-up to receive personalized offers!</div>	</div>	<script src="j""CTYPE html><html><head>	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="title">Special Off""TYPE html><html><head>	<title>Sample",,,,,,Using Variable to Store a Boolean,"<!DOCTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span id="shipping"></span></div>	<script src="js/varEx.js"></script></body></html>  var inStock;var shipping;inStock = true;shipping = false;var elStock = document.getElementById('stock');elStock.className = inStock;var elShip = document.getElementById('shipping');elShip.className = shipping;""!DOCTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span id="shipping"></span></div>	<script src="js/varEx.js"></script></body></html>  var inStock;var shipping;inStock = true;shipping = false;var elStock = document.getElementById('stock');elStock.className = inStock;var elShip = document.getElementById(""DOCTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span id="shipping"></span></div>	<script src="js/varEx.js"></script></body></html>  var inStock;var shipping;inStock = true;shipping = false;var elStock = document.getElementById('stock');elStock.className = inStock""OCTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span id="shipping"></span></div>	<script src="js/varEx.js"></script></body></html>  var inStock;var shipping;inStock = true;shipping = false;var elStock = document.getElementByI""CTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span id="shipping"></span></div>	<script src="js/varEx.js"></script></body></html>  var inStock;var shipping;inStock = true;shipping = false;""TYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span id="shipping"></span></div>	<script src="js/varEx.js"></script></body></html>  var inStock;var shippi""YPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span id="shipping"></span></div>	<script src="js/varEx.js"></script></bo""PE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span id="shipping"></span></div>	<scri""E html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div class="message">Shipping: 			<span "" html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id="stock"></span></div>		<div cla""html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="message">Available: 			<span id=""tml><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>		<div class="me""ml><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Eld""l><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</t""><html><head>	<link rel="stylesheet" href="css""<html><head>	<link",,,,,,Shorthand for Creating Variables,"var price = 5;var quantity = 14;var total = price * quantity;var price, quantity, total;price = 5;quantity = 14;total = price * quantity;var price = 5, quantity = 14;var total = price * quantity;var el = document.getElementById('cost');el.textContent = '$' + total;",,,,,,Changing the Value of a Variable,"var inStock;var shipping;inStock = true;shipping = false;/* Some other processing might go here and, as a result, the script might need these values */inStock = false;shipping = true;var elStock = document.getElementById('stock');elStock.className = inStock;var elShip = document.getElementById('shipping');elShip.className = shipping;",,,,,,Creating an Array,"//Array Literalvar colors;colors = ['white', 'black', 'custom'];var el = document.getElementById('colors');el.textContent = colors[0];//Array Constructorvar colors = new Array('white',						'black',						'custom');var el = document.getElementById('colors');el.textContent = colors[0];",,,,,,Accessing & Changing Values in an Array,"//Create the Arrayvar colors = ['white',				'black',				'custom'];//Update the third item in the arraycolors[2] = 'beige';//Get the element with an id of colorsvar el = document.getElementById('colors');//Replace with third item from the arrayel.textContent = colors[2];",,,,,,Expressions,//1. Expressions that just assign a value to a variable. var color = ‘beige’;  //2. Expressions that use two or more values to return a single value. var area = 3 * 2;,,,,,,Operators,//1. Assignment Operators color = ‘beige’;  //2. Arithmetic Operators area = 3 * 2;  //3.String Operators greeting = ‘Hi ‘ + ‘Molly’;  //4. Comparison Operators buy = 3 > 5;  //5.Logical Operators buy = (5 > 3) && (2  > 4);,,,,,,Arithmetic Operators,"addition		+	10 + 5subtraction	-	10 - 5division		/	10 / 5multiplication	*	10 * 5increment	++	i=10; i++;decrement	--	i=10; i--;modulus	%	10 % 3",,,,,,Using Arithmetic Operators,"var subtotal = (13 + 1) * 5;var shipping = 0.5 * (13 + 1);var total = subtotal + shipping;var elSub = document.getElementById('subtotal');elSub.textContent = subtotal;var elShip = document.getElementById('shipping');elShip.textContent = shipping;var elTotal = document.getElementById('total');elTotal.textContent = total;",,,,,,String Operators,"var firstName = 'Ivy';var lastName = 'Stone';var fullName = firstName + lastName;",,,,,,Using String Operators,"<!DOCTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greeting" class="message">Hello			<span id="name">friend</span>		</div>	</div>		<script src="js/varEx.js"></script></body></html>  var greeting = 'Howdy';var name = 'Molly';var welcomeMessage  =greeting + name + '!';var el = document.getElementById('greeting');el.textContent = welcomeMessage;""!DOCTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greeting" class="message">Hello			<span id="name">friend</span>		</div>	</div>		<script src="js/varEx.js"></script></body></html>  var greeting = 'Howdy';var name = 'Molly';var welcomeMessage  =greeting + name + '!';var el = document.getElementById('gre""DOCTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greeting" class="message">Hello			<span id="name">friend</span>		</div>	</div>		<script src="js/varEx.js"></script></body></html>  var greeting = 'Howdy';var name = 'Molly';var welcomeMessage  =greeting + name + '!'""OCTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greeting" class="message">Hello			<span id="name">friend</span>		</div>	</div>		<script src="js/varEx.js"></script></body></html>  var greeting = 'Howdy';var name = 'Molly';var""CTYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greeting" class="message">Hello			<span id="name">friend</span>		</div>	</div>		<script src="js/varEx.js"></script></body></html>  var greeti""TYPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greeting" class="message">Hello			<span id="name">friend</span>		</div>	</div>		<script src="js/varEx.js">""YPE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greeting" class="message">Hello			<span id="name">friend</span>		</div>""PE html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greeting" class="message">Hello			<spa""E html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<div id="content">		<div id="greet"" html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head><body>	<h1>Elderflower</h1>	<d""html><html><head>	<link rel="stylesheet" href="css/c02.css">	<title>Sample</title></head>""tml><html><head>	<link rel="stylesheet" href="css/c02.css">""ml><html><head>	<link rel="st""l>",,,,,,Unit 2 Final Example,,,,,,,Summary,">A script is made up of a series of statements.  each statement is like a step in a recipe.>Scripts contain very precise instructions.  For example, you might specify that a value must be remembered before creating a calculation using that value.>Variable are used to temporarily store pieces of information used in the script.>Arrays are special types of variables that store more than one piece of related information.>JavaScript distinguishes between numbers (0-9), strings (text), and Boolean values (true or false).>Expressions evaluate into a single value.>Expressions rely on operators to calculate a value.",,,,,,A Basic Function,"<!DOCTYPE html><html><head>	<title>Basic Function</title>	<link rel="stylesheet" href="css/c03.css" /></head><body>	<h1>Travel Worthy</h1>	<div id="message">Welcome to our site!</div>	<script src="script.js"></script></body></html>var msg = 'Sign up to receive our newsletter for 10% off!';function updateMessage() {	var el = document.getElementById('message');	el.textContent = msg;}updateMessage();""!DOCTYPE html><html><head>	<title>Basic Function</title>	<link rel="stylesheet" href="css/c03.css" /></head><body>	<h1>Travel Worthy</h1>	<div id="message">Welcome to our site!</div>	<script src="script.js"></script></body></html>var msg = 'Sign up to receive our newsletter for 10% off!';function updateMessage() {	var el = docum""DOCTYPE html><html><head>	<title>Basic Function</title>	<link rel="stylesheet" href="css/c03.css" /></head><body>	<h1>Travel Worthy</h1>	<div id="message">Welcome to our site!</div>	<script src="script.js"></script></body></html>var msg = 'Sign up to receive o""OCTYPE html><html><head>	<title>Basic Function</title>	<link rel="stylesheet" href="css/c03.css" /></head><body>	<h1>Travel Worthy</h1>	<div id="message">Welcome to our site!</div>	<script src=""CTYPE html><html><head>	<title>Basic Function</title>	<link rel="stylesheet" href="css/c03.css" /></head><body>	<h1>Travel Wo""TYPE html><html><head>	<title>Basic Function</title>	<link ",,,,,,Declaring a Function,"function sayHello() {	document.write('Hello!');}",,,,,,Calling a Function,sayHello();,,,,,,Declaring Functions that Need Information,"function getArea(width, height) {	return width * height;}",,,,,,Calling Functions that Need Information,"getArea(3, 5);wallWidth = 3;wallHeight = 5;getArea(wallWidth, wallHeight);",,,,,,Getting a Single Value out of a Function,"function calculateArea(width, height) {	var area = width * height;	return area;}var wallOne = calculateArea(3, 5);var wallTwo = calculateArea(8, 5);",,,,,,Getting Multiple Values out of a Function,"function getSize(width, height, depth) {	var area = width * height;	var volume = width * height * depth;	var sizes = [area, volume];	return sizes;}var areaOne = getSizes(3, 2, 3)[0];var volumeOne = getSizes(3, 2, 3)[1];",,,,,,Anonymous Functions & Function Expressions,"//Function Declarationfunction area(width, height) {	return width * height;}var size = area(3, 4);//Function Expressionvar area = function(width, height) {	return width * height;};var size = area(3, 4);",,,,,,Immediately Invoked Function Expressions (IIFE),"var area = (function()) {	var width = 3;	var height = 2;	return width * height;}());",,,,,,Variable Scope,"funtion getArea(width, height) {	var area = width * height; //Local	return area;}var wallSize = getArea(3, 2); //Globaldocument.write(wallSize); ",,,,,,How Memory & Variables Work,,,,,,,Creating an Object: Literal Notation,"var hotel = {	name: 'Quay',	rooms: 40,	booked: 25,	checkAvailability: function() {		return this.rooms - this.booked;	}};",,,,,,Accessing an Object & Dot Notation,"var hotelName = hotel.name;var roomsFree = hotel.checkAvailability();//orvar hotelName = hotel['name'];",,,,,,Creating Objects using Literal Notation,"var hotel = {	name: 'Quay';	rooms: 40;	booked: 25;	checkAvailability: function() {		return this.rooms - this.booked;	}};var elName = document.getElementById('hotelName');elName.textContent = hotel.name;var elRooms = document.getElementById('rooms');elRooms.textContent = hotel.checkAvailability();",,,,,,Creating an Object: Constructor Notation,"var hotel = new Object();hotel.name = 'Quay';hotel.rooms = 40;hotel.booked = 25;hotel.checkAvailability = function() {	return this.rooms - this.booked;};",,,,,,Updating an Object / Delete an Object,"hotel.name = 'Park';//orhotel['name'] = 'Park';  //delete propertydelete hotel.name//clear value of propertyhotel.name = '';",,,,,,Creating Many Objects: Constructor Notation,"function hotel(name, rooms, booked) {	this.name = name;	this.rooms = rooms;	this.booked = booked;	this.checkAvailability = function() {		return this.rooms - this.booked;	};}var quayHotel = new Hotel('Quay', 40, 25);var parkHotel = new Hotel('Park', 120, 77);",,,,,,Creating Objects using Constructor Syntax,"var hotel = new Object();hotel.name = 'Park';hotel.rooms = 120;hotel.booked = 77;hotel.checkAvailability = function() {	return this.rooms - this.booked;};var elName = document.getElementById('hotelName');elName.textContent = hotel.name;var elRooms = document.getElementById('rooms');elRooms.textContent = hotel.checkAvailability();",,,,,,Create & Access Objects: Constructor Notation,"function Hotel(name, rooms, booked) {	this.name = name;	this.rooms = rooms;	this.booked = booked;	this.checkAvailability = function() {		return this.rooms - this.booked;	};}var quayHotel = new Hotel('Quay', 40, 25);var parkHotel = new Hotel('Park', 120, 77);var details1 = quayHotel.name + ' rooms: ';	details1 += quayHotel.checkAvailability();var elHotel1 = document.getElementById('hotel1');elHotel.textContent = details1;var details2 = parkHotel.name + ' rooms: ';	details2 += parkHotel.checkAvailability();	var elHotel2 = document.getElementById('hotel2');	elHotel2.textContent = details2;",,,,,,Adding & Removing Properties,"var hotel = {	name : 'Park';	rooms : 120;	booked : 77};hotel.gym = true;hotel.pool = false;delete hotel.booked;var elName = document.getElementById('hotelName');elName.textContent = hotel.name;var elPool = document.getElementById('pool');elPool.className = hotel.pool;var elGym = document.getElementById('gym');elGym.className = hotel.gym;",,,,,,Recap: Ways to Create Objects,"Create the object, then add properties & methods1. Literal Notation 2. Object Constructor NotationCreating an object with properties & Methods1. Literal Notation2. Object Constructor Notation",,,,,,This (It is a keyword).,,,,,,,Recap: Storing Data,,,,,,,Arrays are Objects,"// An Object:costs = {	room1: 420;	room2: 460;	room3: 230;	room4: 620;}// An Array:costs = [420, 460, 230, 620];",,,,,,Arrays of Objects & Objects in Arrays,,,,,,,Built-in Objects,"Browser Object Model (Window: Document, History, Location, Navigator, Screen) Document Object Model (Document: html, head, body, div, etc)Global JS Objects (string, number, boolean, date, math, regex)",,,,,,Browser Object Model: Window Object,"Property:window.innerHeightwindow.innerWidthwindow.pageXOffsetwindow.pageYOffsetwindow.screenXwindow.screenYwindow.locationwindow.documentwindow.historywindow.history.lengthwindow.screenwindow.screen.widthwindow.screen.heightMethod:window.alert()window.open()window.print()",,,,,,Using the Browser Object Model,"var msg = '<h2>browser window</h2><p>width: ' + window.innerWidth + '</p>';msg += '<p>height: ' + window.innerheight + '</p>';msg += '<h2>history</h2><p>items: ' + window.history.length + '</p>';msg += '<h2>screen</h2><p>width: ' + window.screen.width + '</p>';msg += '<p>height: ' + window.screen.height + '</p>';var el = document.getElementById('info');el.innerHTML = msg;alert('Current page: ' + window.location);",,,,,,Document Object Model: Document Object,"Property:document.titledocument.lastModifieddocument.URLdocument.domainMethod:document.write()document.getElementById()document.querySelectorAll()document.createElement()document.createTextNode()",,,,,,Using the Document Object,"var msg = '<p><b>page title: </b>' + document.title + '<br />';msg += '<b>page address: </b>' + document.URL + '<br />';msg += '<b>last modified: </b>' + document.lastModified + '</p>';var el = document.getElementById('footer');el.innerHTML = msg;",,,,,,Global Objects: String Objects,"var saying = 'Home Sweet Home ';Property:lengthMethod:toUpperCase()toLowerCase()charAt()indexOf()lastIndexOf()substring()split()trim()replace()Example:saying.length;saying.toUpperCase();saying.toLowerCase();saying.charAt(12);saying.indexOf('ee');saying.lastIndexOf('e');saying.substring(8,14);saying.split(' ');saying.trim();saying.replace('me', 'w');",,,,,,Working with Strings,"var saying = 'Home sweet home';var msg = '<h2>length</h2><p>' + saying.length + '</p>';msg += '<h2>uppercase</h2><p>' + saying.toUpperCase() + '</p>';msg += '<h2>lowercase</h2><p>' + saying.toLowerCase() + '</p>';msg += '<h2>character index: 12</h2><p>' + saying.charAt(12) + '</p>';msg += '<h2>first ee</h2><p>' + saying.indexOf('ee') + '</p>';msg += '<h2>character index: 8-14</h2><p>' + saying.substring(8, 14) + '</p>';msg += '<h2>replace</h2><p>' + saying.replace('me', 'w') + '</p>';var el = document.getElementById('info');el.innerHTML = msg;",,,,,,Data Types Revisited,"Simple or Primitive Data Types:1. String2. Number3. Boolean4. Undefined5. NullComplex Data Types6. Object",,,,,,Global Objects: Number Object,"Method:isNaN()toFixedtoPrecisiontoExponential()",,,,,,Working with Decimal Numbers,"var originalNumber = 10.23456;var msg = '<h2>original number</h2>' + originalNumber + '</p>';msg += '<h2>3 decimal places</h2><p>' + originalNumber.toFixed(3) + '</p>';msg += '<h2>3 digits</h2><p>' + originalNumber.toPrecision(3) + '</p>';var el = document.getElementById('info');el.innerHTML = msg;",,,,,,Global Objects: Math Objects,"Property:Math.PIMethod:Math.round();Math.sqrt(n);Math.ceil();Math.floor();Math.random();",,,,,,Math Object to Create Random Numbers,"var randomNum = Math.floor((Math.random() * 10) + 1);var el = document.getElementById('info');el.innerHTML = '<h2> random number</h2><p>' + randomNum + '</p>';",,,,,,Creating an Instance of the Date Object,"var today = new Date();Acceptable Formats:var dob = new Date(1996, 11, 26, 15, 45, 55);var dob = new Date('Dec 26, 1996 15:45:55');var dob = new Date(1996, 11, 26);",,,,,,Global Objects: Date & Time Object,"Method:getDate() 			/ 	setDate()getDay()getFullYear()  		/  	setFullYear()getHours()  		/  	setHours()getMilliseconds()	/	setMilliseconds()	getMinutes()		/	setMinutes()getMonth()			/	setMonth()getSeconds()		/	setSeconds()getTime()			/	setTime()getTimezoneOffset()toDateString()toTimeString()toString",,,,,,Creating a Date Object,"var today = new Date();var year = today.getFullYear();var el = document.getElementById('footer');el.innerHTML = '<p>Copyright &copy;' + year + '</p>';",,,,,,Working with Dates & Times,"Acceptable Date Formats:YYYY, MM, DD, HH, MM, SS1196, 03, 16, 15, 45, 55MMM DD, YYYY HH:MM:SSApr 16, 1996 15:45:55Year			four digitsMonth			0-11 (Jan is 0)Day 			1-31Hour			0-23Minutes			0-59Seconds		0-59Milliseconds		0-999Example:var today = new Date();var year = today.getFullYear();var est = new Date('Apr 16, 1996 15:45:55');var difference = today.getTime() - est.getTime();difference = (difference / 31556900000);var elMsg = document.getElementById('message');elMsg.textContent = Math.floor(difference) + ' years of online travel advice';",,,,,,Unit 3 Final Example,,,,,,,Summary,">Functions allow you to group a set of related statements together that represent a single task.>Functions can take parameters (information required to do their job) and may return a value.>A object is a series of variables and functions that represent something from the world around you.>In an object, variables are known as properties of the object; functions are known as methods of the object.>Web browsers implement objects that represent both the browser window and the document loaded into the browser window.>JavaScript also has several built-in objects such as String, Number, Math, and Date.  Their properties and methods offer functionality that help you write scripts.>Arrays and objects can be used to create complex data sets (and both can contain the other).",,,,,,Evaluating Conditions & Conditional Statements,"if (score > 50) {	document.write('You passed!');} else {	document.write('Try again...');}",,,,,,Comparison Operators: Evaluating Conditions,"==	is equal to===	strict equal to !=	is not equal to !==	strict not equal to >	greater than >=	greater than or equal to < 	less than<=	less than or equal to ",,,,,,Structuring Comparison Operators,(score >= pass),,,,,,Using Comparison Operators,"var pass = 50;var score = 90;var hasPassed = score >= pass;var el = document.getElementById('answer');el.textContent = 'Level passed: ' + hasPassed;",,,,,,Using Expressions with Comparison Operators,((score1 + score2) > (highScore1 + highScore2)),,,,,,Comparing Two Expressions,"var score1 = 90;var score2 = 95;var highScore1 = 75;var highScore2 = 95;var comparison = (score1 + score2) > (highScore1 + highScore2);var el = document.getElementById('answer');el.textContent = 'New high score: ' + comparison;",,,,,,Logical Operators,"((5 < 2) && (2 >= 3))&&	Logical And||	Logical Or!	Logical Not*Logical expressions are evaluated left to right.  If the first condition can provide enough information to get the answer, then there is no need to evaluate the second condition.",,,,,,Using Logical AND,"var score1 = 8;var score2 = 8;var pass1 = 6;var pass2 = 6;var passBoth = (score1 >= pass1) && (score2 >= pass2);var msg = 'Both rounds passed: ' +passBoth;var el = document.getElementById('answer');el.textContent = msg;",,,,,,Using Logical OR & Logical NOT,"var score1 = 8;var score2 = 8;var pass1 = 6;var pass2 = 6;var minPass = ((score1 >= pass1) || (score2 >= pass2));var msg = 'Resit required: ' + !minPass;var el = document.getElementById('answer');el.textContent = msg;",,,,,,If Statements,"if (score >= 50) {	congratulate();}",,,,,,Using If Statements,"// Two Methods of Same Result:var score = 75;var msg;if (score >= 50) {	msg = 'Congratulations!';	msg += ' Proceed to the next round.';}var el = document.getElementById('answer');el.textContent = msg;//Lines of code don't always run in order you'd expect:var score = 75;var msg = '';function congratulate() {	msg += 'Congratulations! ';}if (score >= 50) {	congratulate();	msg += 'Proceed to the next round.'}var el =document.getElementById('answer');el.innerHTML = msg;",,,,,,If … Else Statements,"if (score >= 50) {	congratulate();}else {	encourage();}",,,,,,Using If … Else Statements,"var pass = 50;var score = 75;var msg;if (score >= pass) {	msg = 'Congratulations, you passed!';} else {	msg = 'Have another go!';}var el = document.getElementById('answer');el.textContent = msg;",,,,,,Switch Statements,"switch (level) {	case 'One':		title: 'Level 1';		break;	case 'Two':		title = 'Level 2';		break;	case 'Three':		title = 'Level 3';		break;	default:		title = 'Test';		break;}",,,,,,Using Switch Statements,"var msg;var level = 2;switch (level) {case 1:	msg = 'Good luck on the first test';	break;case 2:	msg = 'Second of three - keep going!';	break;case 3:	msg = 'Final rounds, almost there!'	break;default:	msg = 'Good luck!';	break;}var el = document.getElementById('answer');el.textContent = msg;",,,,,,Type Coercion & Weak Typing,"string		Textnumber		NumberBoolean		true or falsenull		Empty valueundefined	Variable has been declared but not yet assigned a valueNaN is a value that is counted as a number.  Seen when a number is expected, but not returned.",,,,,,Truthy & Falsy Values,"Falsy Values:Value 				Descriptionvar highScore = false;		The traditional Bllean falsevar highScore = 0;		The number is zerovar highScore = '';		Empty valuevar highScore = 10/'score';	NaN (Not a Number)var highScore;			A variable with no value assigned to it.Almost everything else is truthy...Truthy Values:Value				Descriptionvar highScore = true;		The traditional Boolean true var highScore = 1;		Numbers other than zerovar highScore = 'carrot';		Strings with content var highScore = 10/5;		Number calculationsvar highScore = 'true';		true written as a string var highScore = '0';		Zero written as a stringvar highScore = 'false'		false written as a string ",,,,,,Checking Equality & Existence,"//A unary operator returns a result with just one operand.if (document.getElementById('header')) {	//Found: do something} else {	//Not found: do something else}*Because of type coercion, the scrict equality operators === and !== result in fewer unexpected values than == and != do.  See chart of examples below.",,,,,,Short Circuit Values,Logical operators are processed left to right.  They short-circuit (stop) as soon as they have a result - but they return the value that stopped the processing (not necessarily true or false).  See examples below.,,,,,,Loops,"for (var i = 0; i < 10; i++) {	document.write(i);}",,,,,,Loop Counters,"Initializationvar i = 0;Condition1 < 10;Updatei++",,,,,,Key Loop Concepts,"3 points to consider when working with loops. Each is illustrated in examples on the following three pages.1. Keywords: Break & Continue2. Loops & Arrays3. Performance Issues: infinate loop ",,,,,,Using For Loops,"var scores = [24, 32, 17];var arrayLength = scores.length;var roundNumber = 0;var msg = '';var i;for (i = 0; i < arrayLength; i++) {	roundNumber = (i + 1);	msg += 'Round ' + roundNumber + ': ';	msg += scores[i] + '<br/>';}document.getElementById('answer').innerHTML = msg;",,,,,,Using While Loops,"var i = 1;var msg = '';while (i < 10) {	msg += i + ' x 5 = ' + (i * 5) + '<br/>';	i++;}document.getElementById('answer').innerHTML = msg;",,,,,,Using Do While Loops,"var i = 1;var msg = '';do {	msg += i + ' x 5 = ' + (i * 5) + '<br/>';	i++;} while (i < 1);document.getElementById('answer').innerHTML = msg;",,,,,,Example,,,,,,,Summary,">Conditional statements allow your code to make decisions about what to do next.>Comparison operators (==, !==, ==, !=, <, >, <=, =>) are used to compare to operands.>Logical operators allow you to combine more than one set of comparison operators.>if...else statements allow you to run one set of code if a condition is true, and another if it is false.>switch statements allow you to compare a value against possible outcomes (and also provides a default option if none match).>Data types can be coerced from one type to another.>all values evaluate to either truthy or falsy.>There are three types of loop: for, while, and do...while.  Each repeats a set of statements.",,,,,,Accessing Single Element Nodes,getElementById(‘one’),,,,,,Accessing Single Element Nodes,querySelector(‘li.hot’),,,,,,Accessing Multiple Element Nodes,getElementsByClassName(‘hot’),,,,,,Accessing Multiple Element Nodes,getElementsByTagName(‘li’),,,,,,Accessing Multiple Element Nodes,querySelectorAll(‘li.hot’),,,,,,Selecting Elements: ID Attribute,var el = document.getElementById('one'); el.className = 'cool';,,,,,,Selecting Element: Nodelist: item() method,"var elements = document.getElementsByClassName('hot')if (elements.length >= 1) {	var firstItem = elements.item(0);} ",,,,,,Selecting Element: Nodelist: Array Syntax,"var elements = document.getElementsByClassName('hot');if (elements.length >= 1) {	var firstItem = elements[0];}",,,,,,Selecting Elements: Class Attribute,"ar elements = document.getElementsByClassName('hot');if (elements.length > 2) {	var el = elements[2];	el.className = 'cool';}",,,,,,Selecting Elements: Tag Name,"var elements = document.getElementsByTagName('li');if (elements.length > 0) {	var el = elements[0];	el.className = 'cool';} ",,,,,,Selecting Element: CSS Selectors querySelector();,"var el = document.querySelector('li.hot');el.className = 'cool'; ",,,,,,Selecting Elements: CSS Selectors querySelectorAll();,"var els = document.querySelectorAll('li.hot');els[1].className = 'cool';",,,,,,Looping through Nodelist,"var hotItems = document.querySelectorAll('li.hot');if (hotItems.length > 0) {	for (var i=0; i<hotItems.length; i++) {		hotItems[i].className = 'cool';	}}",,,,,,Previous & Next Sibling,"var startItem = document.getElementById('two');var prevItem = startItem.previousSibling;var nextItem = startItem.nextSibling;prevItem.className = 'complete';nextItem.className = 'cool'; ",,,,,,First & Last Child,"var startItem = document.getElementsByTagName('ul')[0];var firstItem = startItem.firstChild;var lastItem = startItem.lastChild;firstItem.setAttribute('class', 'complete');lastItem.setAttribute('class', 'cool');",,,,,,Accessing & Changing Text Node,"var itemTwo = document.getElementById('two');var elText = itemTwo.firstChild.nodeValue;elText = elText.replace('pine nuts', 'kale');itemTwo.firstChild.nodeValue = elText;",,,,,,Accessing Text Only,"ar firstItem = document.getElementById('one'); var showTextContent = firstItem.textContent;    var showInnerText = firstItem.innerText;  var msg = '<p>textContent: ' + showTextContent + '</p>';    msg += '<p>innerText: ' + showInnerText + '</p>';var el = document.getElementById('scriptResults');el.innerHTML = msg;firstItem.textContent = 'sourdough bread';        ",,,,,,Update Text & Markup,"var firstItem = document.getElementById('one');var itemContent = firstItem.innerHTML;firstItem.innerHTML = '<a href=\"http://example.org\">' + itemContent + '</a>';""ar firstItem = document.getElementById('one');",,,,,,Adding Element to DOM Tree,"var newEl = document.createElement('li');var newText = document.createTextNode('quinoa');newEl.appendChild(newText);var position = document.getElementsByTagName('ul')[0];position.appendChild(newEl);",,,,,,Removing Element from DOM Tree,"var removeEl = document.getElementsByTagName('li')[3];var containerEl = removeEl.parentNode;containerEl.removeChild(removeEl);",,,,,,Check for Attribute & Get its Values,"var firstItem = document.getElementById('one');if (firstItem.hasAttribute('class')) {	var attr = firstItem.getAttribute('class');	var el = document.getElementById('scriptResults');	el.innerHTML = '<p>The first item has a class name: ' + attr + '</p>';}",,,,,,Creating Attributes & Changing their Values,"var firstItem = document.getElementById('one');firstItem.className = 'complete';var fourthItem = document.getElementsByTagName('li').item(3);fourthItem.setAttribute('class', 'cool');//19. P.235: Removing Attributesvar firstItem = document.getElementById('one');if (firstItem.hasAttribute('class')) {	firstItem.removeAttribute('class');}",,,,,,Removing Attributes,"var firstItem = document.getElementById('one');if (firstItem.hasAttribute('class')) {	firstItem.removeAttribute('class');}",,,,,,Unit 5 Final Example,"//Adding items to start and end of listvar list = document.getElementsByTagName('ul')[0];//Add new item to end of listvar newItemLast = document.createElement('li');var newTextLast = document.createTextNode('cream');newItemLast.appendChild(newTextLast);list.appendChild(newItemLast);//Add new item start of listvar newItemFirst = document.createElement('li');var newTextFirst = document.createTextNode('kale');newItemFirst.appendChild(newTextFirst);list.insertBefore(newItemFirst, list.firstChild);var listItems = document.querySelectorAll('li');//Add a class of cool to all list itemsvar i;for (i=0; i < listItems.length; i++) {	listItems[i].className = 'cool';}//Add number of items in the list to the headingvar heading = document.querySelector('h2');var headingText = heading.firstChild.nodeValue;var totalItems = listItems.length;var newHeading = headingText + '<span>' + totalItems + '</span>';heading.innerHTML = newHeading;",,,,,,Summary,">The browser represents the page using a DOM tree.>DOM trees have four types of nodes: documentnodes, element nodes, attribute nodes, and text nodes.>You can select element nodes by their id or class attributes, by tag name, or using CSS selector syntax.>Whenever a DOM query can return more than one node, it will always return a NodeList.>From an element node, you can access and update its content using properties such as textContent and innerHTML or using DOM manipulation techniques.>An element node can contain multiple text nodes and child elements that are siblings of each other.>In older browsers, implementation of the DOM is inconsistent (and is a popular reason for using jQuery).>Browsers offer tools for viewing the DOM tree.",,,,,,Different Event Types,,,,,,,How Events Trigger JavaScript Code,,,,,,,Three Ways to Bind an Event to an Element,,,,,,,HTML Event Handler Attributes (Don’t Use),,,,,,,Traditional DOM Event Handlers,,,,,,,Using DOM Event Handlers,,,,,,,Event Listeners,,,,,,,Using Event Listeners,,,,,,,Using Parameters with Event Handlers & Listeners,,,,,,,Using Parameters with Event Listeners,,,,,,,Supporting Older Versions of IE,,,,,,,Fallback for Using Event Listeners in IE8,,,,,,,Event Flow,,,,,,,The Event Object,,,,,,,The Event Object in IE5-8,,,,,,,Using Event Listeners with the Event Object,,,,,,,Event Delegation,,,,,,,Changing Default Behavior,,,,,,,Using Event Delegation,,,,,,,Which Element Did an Event Occur On?,,,,,,,Different Types of Events,,,,,,,User Interface Events,,,,,,,Load,,,,,,,Focus & Blur Events,,,,,,,Focus & Blur,,,,,,,Mouse Events,,,,,,,Click,,,,,,,Where Events Occur,,,,,,,Determining Position,,,,,,,Keyboard Events,,,,,,,Which Key Was Pressed,,,,,,,Form Events,,,,,,,Using Form Events,,,,,,,Mutation Events & Observers,,,,,,,Using Mutation Events,,,,,,,HTML5 Events,,,,,,,Using HTML5 Events,,,,,,,Example,,,,,,,Summary,,,,,,,What is JQuery?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,